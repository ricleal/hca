'''
Created on 16 Mar 2013

@author: leal



Test to have dendrograms working in python.

Cant get it working....


'''

import matplotlib.pyplot as plt
from scipy.spatial.distance import pdist
from scipy.cluster.hierarchy import linkage, dendrogram
from numpy.random import rand
import numpy as np

class HCA(object):
    '''
    classdocs
    '''
    

    def __init__(self):
        '''
        Constructor
        '''
        pass
    
    def example(self):
        from matplotlib.pyplot import show
        from scipy.spatial.distance import pdist
        from scipy.cluster.hierarchy import linkage, dendrogram
        from numpy.random import rand

        X = rand( 5, 3 ) # 5 points in 3D space
        X[0:5, :] *= 2
        Y = pdist( X )
        Z = linkage( Y )
        dendrogram( Z )
        show()
        
    def test(self):
        data = [[1, 0.996, 0.992, 0.995, 0.997, 0.986, 0.996, 0.988, 0.991, 0.99, 0.969, 0.958, 0.953, 0.967, 0.953, 0.942, 0.94, 0.955, 0.965],
        [0, 1, 0.998, 0.999, 0.999, 0.986, 0.992, 0.989, 0.992, 0.984, 0.962, 0.953, 0.946, 0.961, 0.949, 0.938, 0.936, 0.95, 0.96],
        [0, 0, 1, 0.999, 0.998, 0.99, 0.992, 0.991, 0.992, 0.986, 0.953, 0.94, 0.931, 0.951, 0.934, 0.924, 0.919, 0.938, 0.949],
        [0, 0, 0, 1, 0.999, 0.985, 0.991, 0.987, 0.99, 0.984, 0.964, 0.952, 0.944, 0.962, 0.946, 0.937, 0.933, 0.95, 0.96],
        [0, 0, 0, 0, 1, 0.988, 0.995, 0.99, 0.992, 0.988, 0.965, 0.952, 0.945, 0.963, 0.947, 0.937, 0.933, 0.951, 0.961],
        [0, 0, 0, 0, 0, 1, 0.995, 0.999, 0.997, 0.995, 0.933, 0.917, 0.91, 0.93, 0.911, 0.899, 0.896, 0.916, 0.928],
        [0, 0, 0, 0, 0, 0, 1, 0.995, 0.995, 0.998, 0.953, 0.937, 0.929, 0.95, 0.93, 0.917, 0.914, 0.935, 0.946],
        [0, 0, 0, 0, 0, 0, 0, 1, 0.998, 0.995, 0.935, 0.921, 0.915, 0.933, 0.916, 0.904, 0.901, 0.918, 0.931],
        [0, 0, 0, 0, 0, 0, 0, 0, 1, 0.992, 0.939, 0.929, 0.924, 0.937, 0.925, 0.913, 0.912, 0.924, 0.937],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.942, 0.923, 0.914, 0.938, 0.915, 0.901, 0.898, 0.921, 0.933],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.994, 0.986, 0.999, 0.986, 0.98, 0.973, 0.994, 0.995],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.997, 0.996, 0.998, 0.994, 0.991, 0.998, 0.999],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.989, 0.999, 0.995, 0.996, 0.993, 0.995],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.99, 0.983, 0.977, 0.996, 0.997],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.997, 0.997, 0.994, 0.996],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.998, 0.993, 0.994],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.986, 0.989],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.999],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]
        
        
        out = []
        count = 0
        for i in data:
            out.extend([i[count+1:]])
            count+=1
        out = [val for subl in out for val in subl]
        
        
        import matplotlib.pyplot as plt
        from scipy.spatial.distance import pdist
        from scipy.cluster.hierarchy import linkage, dendrogram
        from numpy.random import rand
        import numpy as np
        
        out = np.array(out)
        
        d = np.sqrt(1 - out ** 2) 
        
        Z = linkage(d,method='complete')
        R = dendrogram(Z, labels=['%s' % i for i in range(1,20)])
        plt.show()    
    
    def test2(self):
        dtype = [('ds1', int), ('ds2', int), ('dist',float)]
    
        dsDistances = [(1, 2, 0.996), (1, 3, 0.992), (2, 3, 0.998), (1, 4, 0.995), (2, 4, 0.999), (3, 4, 0.999), (1, 5, 0.997), 
                       (2, 5, 0.999), (3, 5, 0.998), (4, 5, 0.999), (1, 6, 0.986), (2, 6, 0.986), (3, 6, 0.99), (4, 6, 0.985), 
                       (5, 6, 0.988), (1, 7, 0.996), (2, 7, 0.992), (3, 7, 0.992), (4, 7, 0.991), (5, 7, 0.995), (6, 7, 0.995),
                       (1, 8, 0.988), (2, 8, 0.989), (3, 8, 0.991), (4, 8, 0.987), (5, 8, 0.99), (6, 8, 0.999), (7, 8, 0.995), 
                       (1, 9, 0.991), (2, 9, 0.992), (3, 9, 0.992), (4, 9, 0.99), (5, 9, 0.992), (6, 9, 0.997), (7, 9, 0.995), 
                       (8, 9, 0.998), (1, 10, 0.99), (2, 10, 0.984), (3, 10, 0.986), (4, 10, 0.984), (5, 10, 0.988), (6, 10, 0.995),
                       (7, 10, 0.998), (8, 10, 0.995), (9, 10, 0.992), (1, 11, 0.969), (2, 11, 0.962), (3, 11, 0.953), (4, 11, 0.964),
                       (5, 11, 0.965), (6, 11, 0.933), (7, 11, 0.953), (8, 11, 0.935), (9, 11, 0.939), (10, 11, 0.942), (1, 12, 0.958), 
                       (2, 12, 0.953), (3, 12, 0.94), (4, 12, 0.952), (5, 12, 0.952), (6, 12, 0.917), (7, 12, 0.937), (8, 12, 0.921), 
                       (9, 12, 0.929), (10, 12, 0.923), (11, 12, 0.994), (1, 13, 0.953), (2, 13, 0.946), (3, 13, 0.931), (4, 13, 0.944), 
                       (5, 13, 0.945), (6, 13, 0.91), (7, 13, 0.929), (8, 13, 0.915), (9, 13, 0.924), (10, 13, 0.914), (11, 13, 0.986), 
                       (12, 13, 0.997), (1, 14, 0.967), (2, 14, 0.961), (3, 14, 0.951), (4, 14, 0.962), (5, 14, 0.963), (6, 14, 0.93), 
                       (7, 14, 0.95), (8, 14, 0.933), (9, 14, 0.937), (10, 14, 0.938), (11, 14, 0.999), (12, 14, 0.996), (13, 14, 0.989), 
                       (1, 15, 0.953), (2, 15, 0.949), (3, 15, 0.934), (4, 15, 0.946), (5, 15, 0.947), (6, 15, 0.911), (7, 15, 0.93), 
                       (8, 15, 0.916), (9, 15, 0.925), (10, 15, 0.915), (11, 15, 0.986), (12, 15, 0.998), (13, 15, 0.999), 
                       (14, 15, 0.99), (1, 16, 0.942), (2, 16, 0.938), (3, 16, 0.924), (4, 16, 0.937), (5, 16, 0.937), 
                       (6, 16, 0.899), (7, 16, 0.917), (8, 16, 0.904), (9, 16, 0.913), (10, 16, 0.901), (11, 16, 0.98), 
                       (12, 16, 0.994), (13, 16, 0.995), (14, 16, 0.983), (15, 16, 0.997), (1, 17, 0.94), (2, 17, 0.936), 
                       (3, 17, 0.919), (4, 17, 0.933), (5, 17, 0.933), (6, 17, 0.896), (7, 17, 0.914), (8, 17, 0.901), (9, 17, 0.912), (10, 17, 0.898), 
                       (11, 17, 0.973), (12, 17, 0.991), (13, 17, 0.996), (14, 17, 0.977), (15, 17, 0.997), (16, 17, 0.998), (1, 18, 0.955), (2, 18, 0.95), (3, 18, 0.938), (4, 18, 0.95), (5, 18, 0.951), (6, 18, 0.916), (7, 18, 0.935), (8, 18, 0.918), (9, 18, 0.924), (10, 18, 0.921), (11, 18, 0.994), (12, 18, 0.998), (13, 18, 0.993), (14, 18, 0.996), (15, 18, 0.994), (16, 18, 0.993), (17, 18, 0.986), (1, 19, 0.965), (2, 19, 0.96), (3, 19, 0.949), (4, 19, 0.96), (5, 19, 0.961), (6, 19, 0.928), (7, 19, 0.946), (8, 19, 0.931), (9, 19, 0.937), (10, 19, 0.933), (11, 19, 0.995), 
                       (12, 19, 0.999), (13, 19, 0.995), (14, 19, 0.997), (15, 19, 0.996), (16, 19, 0.994), (17, 19, 0.989), (18, 19, 0.999)]
            
        # X = np.array(data)
        # Y = pdist( X )
        
        X = np.array(dsDistances,dtype=dtype)
        X = np.sort(X,order=['ds1','ds2'])
        X_dist = X['dist']
        
        d = np.sqrt(1 - X_dist ** 2) 
        
        Z = linkage(d,method='complete')
        R = dendrogram(Z) #labels=['ds_%s' % i for i in range(len(Z))])
        plt.show()    


    
if __name__ == "__main__":
    h = HCA()
    h.test()
    
    